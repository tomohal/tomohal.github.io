<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Tomohal.github.io</title><link href="http://tomohal.github.io/" rel="alternate"></link><link href="http://tomohal.github.io/feeds/all.atom.xml" rel="self"></link><id>http://tomohal.github.io/</id><updated>2015-12-29T00:00:00+09:00</updated><entry><title>Using OpenBSD as Desktop</title><link href="http://tomohal.github.io/using-openbsd-as-desktop.html" rel="alternate"></link><updated>2015-12-29T00:00:00+09:00</updated><author><name>Tomohal Shimizu</name></author><id>tag:tomohal.github.io,2015-12-29:using-openbsd-as-desktop.html</id><summary type="html">&lt;p&gt;手持ちの Thinkpad X200s に OpenBSD を入れて使っているので備忘録としてセットアップについて書きます．&lt;/p&gt;
&lt;h1&gt;install packages&lt;/h1&gt;
&lt;p&gt;インストール中に xdm を使うとしておくと，xdm が起動しています(当たり前)．&lt;/p&gt;
&lt;p&gt;csh, ksh のパッケージリポジトリ環境変数をセットします．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# vi /etc/csh.cshlogin
setenv PKG_PATH=ftp://ftp.jaist.ac.jp/pub/OpenBSD/5.8/packages/amd64/&amp;quot;
# vi /etc/profile
export PKG_PATH=ftp://ftp.jaist.ac.jp/pub/OpenBSD/5.8/packages/amd64/&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;日本語環境として必要なパッケージを入れます．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# pkg_add ja-sazanami-ttf
# pkg_add scim-anthy
# pkg_add firefox firefox-i18n-ja-39.0.3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;デフォルトの window manager は fvwm です．
適当に window manager を入れます．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# pkg_add windowmaker windowmaker-extra windowmaker-lang wmclock wmmon
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;setup&lt;/h1&gt;
&lt;p&gt;.xsession を編集します．&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/bin:/usr/bin:/usr/local/bin:/usr/X11R6/bin
&lt;span class="nv"&gt;WM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;which wmaker&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ja_JP.UTF-8
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;GTK_IM_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;SCIM
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;XMODIFIERS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;@im=SCIM&amp;quot;&lt;/span&gt;
scim -d
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;C
setxkbmap -option ctrl:nocaps
xscreensaver &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -x &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;WM&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;WM&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;exec &lt;/span&gt;fvwm
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;これで，Firefox に日本語入力することができます．&lt;/p&gt;</summary><category term="openbsd"></category><category term="os"></category></entry><entry><title>Using pelican as static html generator</title><link href="http://tomohal.github.io/using-pelican.html" rel="alternate"></link><updated>2015-12-28T00:00:00+09:00</updated><author><name>Tomohal Shimizu</name></author><id>tag:tomohal.github.io,2015-12-28:using-pelican.html</id><summary type="html">&lt;p&gt;このサイトは github pages で提供されています．
コンテンツの生成には &lt;a href="http://blog.getpelican.com/"&gt;pelican&lt;/a&gt; を使っています．
以下，pelican の使い方をまとめます．
作業は OpenBSD 5.8 の場合です．&lt;/p&gt;
&lt;h1&gt;create user page on github&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://github.com"&gt;github&lt;/a&gt; にアカウントを作り，適当にユーザーページを作
成して，ローカルにクローンします．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/&amp;lt;username&amp;gt;/username.github.io.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;したら，全部消します (^^;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;username.github.io
&lt;span class="nv"&gt;$ &lt;/span&gt;git rm &amp;lt;いろいろ&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;install pelican&lt;/h1&gt;
&lt;p&gt;次に pelican をインストールします．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;doas pkg_add py-pip
&lt;span class="nv"&gt;$ &lt;/span&gt;doas ln -s /usr/local/bin/pip2.7 /usr/local/bin/pip
&lt;span class="nv"&gt;$ &lt;/span&gt;doas pip install pelican markdown
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;create a new project&lt;/h1&gt;
&lt;p&gt;プロジェクトを作成します．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;username.github.io
&lt;span class="nv"&gt;$ &lt;/span&gt;pelican-quickstart
&amp;gt; Where &lt;span class="k"&gt;do&lt;/span&gt; you want to create your new web site? &lt;span class="o"&gt;[&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt; 
&amp;gt; What will be the title of this web site? Random Memo
&amp;gt; Who will be the author of this web site? tomohal
&amp;gt; What will be the default language of this web site? &lt;span class="o"&gt;[&lt;/span&gt;en&lt;span class="o"&gt;]&lt;/span&gt; ja
&amp;gt; Do you want to specify a URL prefix? e.g., http://example.com   &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; What is your URL prefix? &lt;span class="o"&gt;(&lt;/span&gt;see above example&lt;span class="p"&gt;;&lt;/span&gt; no trailing slash&lt;span class="o"&gt;)&lt;/span&gt; http://tomohal.github.io
&amp;gt; Do you want to &lt;span class="nb"&gt;enable &lt;/span&gt;article pagination? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; How many articles per page &lt;span class="k"&gt;do&lt;/span&gt; you want? &lt;span class="o"&gt;[&lt;/span&gt;10&lt;span class="o"&gt;]&lt;/span&gt; 
&amp;gt; What is your &lt;span class="nb"&gt;time &lt;/span&gt;zone? &lt;span class="o"&gt;[&lt;/span&gt;Europe/Paris&lt;span class="o"&gt;]&lt;/span&gt; Asia/Tokyo
&amp;gt; Do you want to generate a Fabfile/Makefile to automate generation and publishing? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want an auto-reload &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; simpleHTTP script to assist with theme and site development? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using FTP? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using SSH? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using Dropbox? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using S3? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using Rackspace Cloud Files? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; 
&amp;gt; Do you want to upload your website using GitHub Pages? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; y
&amp;gt; Is this your personal page &lt;span class="o"&gt;(&lt;/span&gt;username.github.io&lt;span class="o"&gt;)&lt;/span&gt;? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; y
Done. Your new project is available at /home/tomohal/www/tomohal.github.io
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;create a contents&lt;/h1&gt;
&lt;p&gt;content の下にコンテンツファイルを作ります．試しに，このページを
Markdown 形式で作成します．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;editor content/pelican.md
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;html 化は make でできますが，OpenBSD の make は BSD make のため，pelican
の Makefile を扱うことができません．ので，gmake をインストールします．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;doas pkg_add gmake
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;したら，html ファイルを生成します．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gmake html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;コンテンツを確認するためにサーバーを立ち上げます．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gmake serve
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;using theme&lt;/h1&gt;
&lt;p&gt;theme を使って外観を変更することができます．
&lt;a href="http://www.pelicanthemes.com/"&gt;Pelican Themes&lt;/a&gt;にて適当に選びます．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pelican content -s pelicanconf.py -t /projects/your-site/themes/your-theme
&lt;span class="nv"&gt;$ &lt;/span&gt;doas pelican-theme --install folder
&lt;/pre&gt;&lt;/div&gt;</summary><category term="pelican"></category><category term="publishing"></category></entry></feed>